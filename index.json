{
  "api/CueX.Core.Subscription.SubscriptionDetails.html": {
    "href": "api/CueX.Core.Subscription.SubscriptionDetails.html",
    "title": "Class SubscriptionDetails | CueX Documentation",
    "keywords": "Class SubscriptionDetails Inheritance System.Object SubscriptionDetails Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CueX.Core.Subscription Assembly : CueX.Core.dll Syntax public class SubscriptionDetails Fields | Improve this Doc View Source Area Declaration public IArea Area Field Value Type Description IArea | Improve this Doc View Source EventFilter Declaration public ITypeFilter EventFilter Field Value Type Description ITypeFilter | Improve this Doc View Source OriginFilter Declaration public ITypeFilter OriginFilter Field Value Type Description ITypeFilter | Improve this Doc View Source Subscriber Declaration public ISpatialGrain Subscriber Field Value Type Description ISpatialGrain"
  },
  "api/CueX.Core.Subscription.ISubscriptionBuilder-1.html": {
    "href": "api/CueX.Core.Subscription.ISubscriptionBuilder-1.html",
    "title": "Interface ISubscriptionBuilder<T> | CueX Documentation",
    "keywords": "Interface ISubscriptionBuilder<T> Namespace : CueX.Core.Subscription Assembly : CueX.Core.dll Syntax public interface ISubscriptionBuilder<T> where T : IEvent Type Parameters Name Description T Methods | Improve this Doc View Source ForEach(Action<T>) Declaration void ForEach(Action<T> callback) Parameters Type Name Description System.Action <T> callback"
  },
  "api/CueX.Core.Subscription.IArea.html": {
    "href": "api/CueX.Core.Subscription.IArea.html",
    "title": "Interface IArea | CueX Documentation",
    "keywords": "Interface IArea Namespace : CueX.Core.Subscription Assembly : CueX.Core.dll Syntax public interface IArea"
  },
  "api/CueX.Core.PartitionGrainState.html": {
    "href": "api/CueX.Core.PartitionGrainState.html",
    "title": "Class PartitionGrainState | CueX Documentation",
    "keywords": "Class PartitionGrainState Inheritance System.Object PartitionGrainState GridPartitionGrainState Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CueX.Core Assembly : CueX.Core.dll Syntax public abstract class PartitionGrainState Fields | Improve this Doc View Source Children Declaration public List<ISpatialGrain> Children Field Value Type Description System.Collections.Generic.List < ISpatialGrain >"
  },
  "api/CueX.Core.ISpatialPubSub.html": {
    "href": "api/CueX.Core.ISpatialPubSub.html",
    "title": "Interface ISpatialPubSub | CueX Documentation",
    "keywords": "Interface ISpatialPubSub Namespace : CueX.Core Assembly : CueX.Core.dll Syntax public interface ISpatialPubSub Methods | Improve this Doc View Source Insert<T>(T) Declaration Task Insert<T>(T spatialGrain) where T : ISpatialGrain Parameters Type Name Description T spatialGrain Returns Type Description System.Threading.Tasks.Task Type Parameters Name Description T | Improve this Doc View Source Remove<T>(T) Declaration Task<bool> Remove<T>(T spatialGrain) where T : ISpatialGrain Parameters Type Name Description T spatialGrain Returns Type Description System.Threading.Tasks.Task < System.Boolean > Type Parameters Name Description T"
  },
  "api/SimpleExample.Grains.html": {
    "href": "api/SimpleExample.Grains.html",
    "title": "Namespace SimpleExample.Grains | CueX Documentation",
    "keywords": "Namespace SimpleExample.Grains Classes SimpleGrain SimpleGrainState Interfaces ISimpleGrain"
  },
  "api/SimpleExample.Grains.SimpleGrainState.html": {
    "href": "api/SimpleExample.Grains.SimpleGrainState.html",
    "title": "Class SimpleGrainState | CueX Documentation",
    "keywords": "Class SimpleGrainState Inheritance System.Object SpatialGrainState SimpleGrainState Inherited Members SpatialGrainState.Position SpatialGrainState.Parent System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : SimpleExample.Grains Assembly : SimpleExample.Grains.dll Syntax public class SimpleGrainState : SpatialGrainState"
  },
  "api/SimpleExample.Grains.SimpleGrain.html": {
    "href": "api/SimpleExample.Grains.SimpleGrain.html",
    "title": "Class SimpleGrain | CueX Documentation",
    "keywords": "Class SimpleGrain Inheritance System.Object Orleans.Grain Orleans.Grain < SimpleGrainState > SpatialGrain < ISimpleGrain , SimpleGrainState > SimpleGrain Implements Orleans.ILifecycleParticipant < Orleans.Runtime.IGrainLifecycle > ISimpleGrain ISpatialGrain Orleans.IGrainWithIntegerKey Orleans.IGrain Orleans.Runtime.IAddressable Inherited Members SpatialGrain<ISimpleGrain, SimpleGrainState>.SetPosition(Vector3d) SpatialGrain<ISimpleGrain, SimpleGrainState>.GetPosition() SpatialGrain<ISimpleGrain, SimpleGrainState>.SetParent<T>(T) SpatialGrain<ISimpleGrain, SimpleGrainState>.RemoveSelfFromParent() SpatialGrain<ISimpleGrain, SimpleGrainState>.Subscribe(SubscriptionDetails, Action<IEvent>) SpatialGrain<ISimpleGrain, SimpleGrainState>.SubscribeTo<T>() Orleans.Grain<SimpleExample.Grains.SimpleGrainState>.ClearStateAsync() Orleans.Grain<SimpleExample.Grains.SimpleGrainState>.WriteStateAsync() Orleans.Grain<SimpleExample.Grains.SimpleGrainState>.ReadStateAsync() Orleans.Grain<SimpleExample.Grains.SimpleGrainState>.Participate(Orleans.Runtime.IGrainLifecycle) Orleans.Grain<SimpleExample.Grains.SimpleGrainState>.State Orleans.Grain.RegisterTimer(System.Func<System.Object, System.Threading.Tasks.Task>, System.Object, System.TimeSpan, System.TimeSpan) Orleans.Grain.RegisterOrUpdateReminder(System.String, System.TimeSpan, System.TimeSpan) Orleans.Grain.UnregisterReminder(Orleans.Runtime.IGrainReminder) Orleans.Grain.GetReminder(System.String) Orleans.Grain.GetReminders() Orleans.Grain.GetStreamProvider(System.String) Orleans.Grain.DeactivateOnIdle() Orleans.Grain.DelayDeactivation(System.TimeSpan) Orleans.Grain.OnActivateAsync() Orleans.Grain.OnDeactivateAsync() Orleans.Grain.GrainReference Orleans.Grain.GrainFactory Orleans.Grain.ServiceProvider Orleans.Grain.IdentityString Orleans.Grain.RuntimeIdentity System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : SimpleExample.Grains Assembly : SimpleExample.Grains.dll Syntax public class SimpleGrain : SpatialGrain<ISimpleGrain, SimpleGrainState>, ILifecycleParticipant<IGrainLifecycle>, ISimpleGrain, ISpatialGrain, IGrainWithIntegerKey, IGrain, IAddressable Constructors | Improve this Doc View Source SimpleGrain(ILogger<SimpleGrain>) Declaration public SimpleGrain(ILogger<SimpleGrain> logger) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger < SimpleGrain > logger Implements Orleans.ILifecycleParticipant<TLifecycleObservable> ISimpleGrain ISpatialGrain Orleans.IGrainWithIntegerKey Orleans.IGrain Orleans.Runtime.IAddressable"
  },
  "api/CueX.Test.BasicSpatialGrainTest.html": {
    "href": "api/CueX.Test.BasicSpatialGrainTest.html",
    "title": "Class BasicSpatialGrainTest | CueX Documentation",
    "keywords": "Class BasicSpatialGrainTest Inheritance System.Object BasicSpatialGrainTest Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CueX.Test Assembly : CueX.Test.dll Syntax [Collection(\"ClusterCollection\")] public class BasicSpatialGrainTest Constructors | Improve this Doc View Source BasicSpatialGrainTest(ClusterFixture) Declaration public BasicSpatialGrainTest(ClusterFixture fixture) Parameters Type Name Description ClusterFixture fixture Methods | Improve this Doc View Source TestPositionAssignment() Declaration [Fact] public void TestPositionAssignment()"
  },
  "api/CueX.Numerics.Helper.html": {
    "href": "api/CueX.Numerics.Helper.html",
    "title": "Class Helper | CueX Documentation",
    "keywords": "Class Helper Inheritance System.Object Helper Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CueX.Numerics Assembly : CueX.Numerics.dll Syntax public static class Helper Methods | Improve this Doc View Source NearlyEqual(Double, Double, Double) Declaration public static bool NearlyEqual(double a, double b, double epsilon) Parameters Type Name Description System.Double a System.Double b System.Double epsilon Returns Type Description System.Boolean"
  },
  "api/CueX.GridSPS.html": {
    "href": "api/CueX.GridSPS.html",
    "title": "Namespace CueX.GridSPS | CueX Documentation",
    "keywords": "Namespace CueX.GridSPS Classes GridPartitionGrain GridPartitionGrainState GridSpatialPubSubBuilder Builder class to help configure and bootstrap a ISpatialPubSub using the grid-based implementation. Interfaces IGridPartitionGrain"
  },
  "api/CueX.GridSPS.GridPartitionGrainState.html": {
    "href": "api/CueX.GridSPS.GridPartitionGrainState.html",
    "title": "Class GridPartitionGrainState | CueX Documentation",
    "keywords": "Class GridPartitionGrainState Inheritance System.Object PartitionGrainState GridPartitionGrainState Inherited Members PartitionGrainState.Children System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CueX.GridSPS Assembly : CueX.GridSPS.dll Syntax public class GridPartitionGrainState : PartitionGrainState Fields | Improve this Doc View Source Config Declaration public GridConfiguration Config Field Value Type Description GridConfiguration | Improve this Doc View Source IsInitialized Declaration public bool IsInitialized Field Value Type Description System.Boolean"
  },
  "api/CueX.GridSPS.GridPartitionGrain.html": {
    "href": "api/CueX.GridSPS.GridPartitionGrain.html",
    "title": "Class GridPartitionGrain | CueX Documentation",
    "keywords": "Class GridPartitionGrain Inheritance System.Object Orleans.Grain Orleans.Grain < GridPartitionGrainState > PartitionGrain < IGridPartitionGrain , GridPartitionGrainState > GridPartitionGrain Implements Orleans.ILifecycleParticipant < Orleans.Runtime.IGrainLifecycle > IGridPartitionGrain IPartitionGrain Orleans.IGrainWithStringKey Orleans.IGrain Orleans.Runtime.IAddressable Inherited Members PartitionGrain<IGridPartitionGrain, GridPartitionGrainState>.Add<T>(T) PartitionGrain<IGridPartitionGrain, GridPartitionGrainState>.Remove<T>(T) PartitionGrain<IGridPartitionGrain, GridPartitionGrainState>.GetChildren() Orleans.Grain<CueX.GridSPS.GridPartitionGrainState>.ClearStateAsync() Orleans.Grain<CueX.GridSPS.GridPartitionGrainState>.WriteStateAsync() Orleans.Grain<CueX.GridSPS.GridPartitionGrainState>.ReadStateAsync() Orleans.Grain<CueX.GridSPS.GridPartitionGrainState>.Participate(Orleans.Runtime.IGrainLifecycle) Orleans.Grain<CueX.GridSPS.GridPartitionGrainState>.State Orleans.Grain.RegisterTimer(System.Func<System.Object, System.Threading.Tasks.Task>, System.Object, System.TimeSpan, System.TimeSpan) Orleans.Grain.RegisterOrUpdateReminder(System.String, System.TimeSpan, System.TimeSpan) Orleans.Grain.UnregisterReminder(Orleans.Runtime.IGrainReminder) Orleans.Grain.GetReminder(System.String) Orleans.Grain.GetReminders() Orleans.Grain.GetStreamProvider(System.String) Orleans.Grain.DeactivateOnIdle() Orleans.Grain.DelayDeactivation(System.TimeSpan) Orleans.Grain.OnDeactivateAsync() Orleans.Grain.GrainReference Orleans.Grain.GrainFactory Orleans.Grain.ServiceProvider Orleans.Grain.IdentityString Orleans.Grain.RuntimeIdentity System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CueX.GridSPS Assembly : CueX.GridSPS.dll Syntax public class GridPartitionGrain : PartitionGrain<IGridPartitionGrain, GridPartitionGrainState>, ILifecycleParticipant<IGrainLifecycle>, IGridPartitionGrain, IPartitionGrain, IGrainWithStringKey, IGrain, IAddressable Constructors | Improve this Doc View Source GridPartitionGrain(ILogger<GridPartitionGrain>, IGridConfigurationService) Declaration public GridPartitionGrain(ILogger<GridPartitionGrain> logger, IGridConfigurationService configService) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger < GridPartitionGrain > logger IGridConfigurationService configService Methods | Improve this Doc View Source OnActivateAsync() Declaration public override Task OnActivateAsync() Returns Type Description System.Threading.Tasks.Task Overrides Orleans.Grain.OnActivateAsync() Implements Orleans.ILifecycleParticipant<TLifecycleObservable> IGridPartitionGrain IPartitionGrain Orleans.IGrainWithStringKey Orleans.IGrain Orleans.Runtime.IAddressable"
  },
  "api/CueX.GridSPS.Config.IGridConfigurationGrain.html": {
    "href": "api/CueX.GridSPS.Config.IGridConfigurationGrain.html",
    "title": "Interface IGridConfigurationGrain | CueX Documentation",
    "keywords": "Interface IGridConfigurationGrain Just a proxy to access the IGridConfigurationService from the client Namespace : CueX.GridSPS.Config Assembly : CueX.GridSPS.dll Syntax public interface IGridConfigurationGrain : IGrainWithStringKey, IGrain, IAddressable Methods | Improve this Doc View Source GetConfiguration() Declaration Task<GridConfiguration> GetConfiguration() Returns Type Description System.Threading.Tasks.Task < GridConfiguration > | Improve this Doc View Source SetConfiguration(GridConfiguration) Declaration Task SetConfiguration(GridConfiguration config) Parameters Type Name Description GridConfiguration config Returns Type Description System.Threading.Tasks.Task"
  },
  "api/CueX.GridSPS.Config.GridConfigurationService.html": {
    "href": "api/CueX.GridSPS.Config.GridConfigurationService.html",
    "title": "Class GridConfigurationService | CueX Documentation",
    "keywords": "Class GridConfigurationService Inheritance System.Object GridConfigurationService Implements IGridConfigurationService Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CueX.GridSPS.Config Assembly : CueX.GridSPS.dll Syntax public class GridConfigurationService : IGridConfigurationService Methods | Improve this Doc View Source GetConfiguration() Declaration public Task<GridConfiguration> GetConfiguration() Returns Type Description System.Threading.Tasks.Task < GridConfiguration > | Improve this Doc View Source SetConfiguration(GridConfiguration) Declaration public Task SetConfiguration(GridConfiguration config) Parameters Type Name Description GridConfiguration config Returns Type Description System.Threading.Tasks.Task Implements IGridConfigurationService"
  },
  "api/CueX.GridSPS.Config.GridConfiguration.html": {
    "href": "api/CueX.GridSPS.Config.GridConfiguration.html",
    "title": "Class GridConfiguration | CueX Documentation",
    "keywords": "Class GridConfiguration Inheritance System.Object Configuration GridConfiguration Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CueX.GridSPS.Config Assembly : CueX.GridSPS.dll Syntax public class GridConfiguration : Configuration Fields | Improve this Doc View Source PartitionSize Declaration public double PartitionSize Field Value Type Description System.Double Methods | Improve this Doc View Source Default() Declaration public static GridConfiguration Default() Returns Type Description GridConfiguration"
  },
  "api/CueX.Core.html": {
    "href": "api/CueX.Core.html",
    "title": "Namespace CueX.Core | CueX Documentation",
    "keywords": "Namespace CueX.Core Classes Configuration PartitionGrain<TGrainInterface, TState> Abstract class providing the basic functionality necessary for sub-classes to manage a partition of the SPS area. PartitionGrainState SpatialGrain<TGrainInterface, TState> Abstract class providing the basic functionality necessary for sub-classes to be insertable into the PubSub-System. SpatialGrainState SpatialPubSubBuilder Interfaces IPartitionGrain ISpatialGrain Interace that needs to be fulfilled by any spatial objects, that should be inserted into the PubSub-System. ISpatialPubSub"
  },
  "api/CueX.Core.Subscription.TypeFilter-1.html": {
    "href": "api/CueX.Core.Subscription.TypeFilter-1.html",
    "title": "Class TypeFilter<TSelf> | CueX Documentation",
    "keywords": "Class TypeFilter<TSelf> Inheritance System.Object TypeFilter<TSelf> Implements ITypeFilter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CueX.Core.Subscription Assembly : CueX.Core.dll Syntax public class TypeFilter<TSelf> : ITypeFilter Type Parameters Name Description TSelf Methods | Improve this Doc View Source IsType<TOther>() Declaration public bool IsType<TOther>() Returns Type Description System.Boolean Type Parameters Name Description TOther Implements ITypeFilter"
  },
  "api/CueX.Core.Subscription.ITypeFilter.html": {
    "href": "api/CueX.Core.Subscription.ITypeFilter.html",
    "title": "Interface ITypeFilter | CueX Documentation",
    "keywords": "Interface ITypeFilter Namespace : CueX.Core.Subscription Assembly : CueX.Core.dll Syntax public interface ITypeFilter Methods | Improve this Doc View Source IsType<T>() Declaration bool IsType<T>() Returns Type Description System.Boolean Type Parameters Name Description T"
  },
  "api/CueX.Core.Subscription.IEvent.html": {
    "href": "api/CueX.Core.Subscription.IEvent.html",
    "title": "Interface IEvent | CueX Documentation",
    "keywords": "Interface IEvent Namespace : CueX.Core.Subscription Assembly : CueX.Core.dll Syntax public interface IEvent"
  },
  "api/CueX.Test.Helper.TestPriorityAttribute.html": {
    "href": "api/CueX.Test.Helper.TestPriorityAttribute.html",
    "title": "Class TestPriorityAttribute | CueX Documentation",
    "keywords": "Class TestPriorityAttribute Inheritance System.Object System.Attribute TestPriorityAttribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.Match(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CueX.Test.Helper Assembly : CueX.Test.dll Syntax [AttributeUsage(AttributeTargets.Method, AllowMultiple = false)] public class TestPriorityAttribute : Attribute Constructors | Improve this Doc View Source TestPriorityAttribute(Int32) Declaration public TestPriorityAttribute(int priority) Parameters Type Name Description System.Int32 priority Properties | Improve this Doc View Source Priority Declaration public int Priority { get; } Property Value Type Description System.Int32"
  },
  "api/CueX.Test.Helper.PriorityOrderer.html": {
    "href": "api/CueX.Test.Helper.PriorityOrderer.html",
    "title": "Class PriorityOrderer | CueX Documentation",
    "keywords": "Class PriorityOrderer Inheritance System.Object PriorityOrderer Implements Xunit.Sdk.ITestCaseOrderer Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CueX.Test.Helper Assembly : CueX.Test.dll Syntax public class PriorityOrderer : ITestCaseOrderer Methods | Improve this Doc View Source OrderTestCases<TTestCase>(IEnumerable<TTestCase>) Declaration public IEnumerable<TTestCase> OrderTestCases<TTestCase>(IEnumerable<TTestCase> testCases) where TTestCase : ITestCase Parameters Type Name Description System.Collections.Generic.IEnumerable <TTestCase> testCases Returns Type Description System.Collections.Generic.IEnumerable <TTestCase> Type Parameters Name Description TTestCase Implements Xunit.Sdk.ITestCaseOrderer"
  },
  "api/CueX.Numerics.html": {
    "href": "api/CueX.Numerics.html",
    "title": "Namespace CueX.Numerics | CueX Documentation",
    "keywords": "Namespace CueX.Numerics Classes Helper Vector3d"
  },
  "api/CueX.Numerics.Vector3d.html": {
    "href": "api/CueX.Numerics.Vector3d.html",
    "title": "Class Vector3d | CueX Documentation",
    "keywords": "Class Vector3d Inheritance System.Object Vector3d Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : CueX.Numerics Assembly : CueX.Numerics.dll Syntax public class Vector3d Constructors | Improve this Doc View Source Vector3d() Declaration public Vector3d() | Improve this Doc View Source Vector3d(Double, Double, Double) Declaration public Vector3d(double x, double y, double z) Parameters Type Name Description System.Double x System.Double y System.Double z Fields | Improve this Doc View Source Data Declaration public double[] Data Field Value Type Description System.Double [] Properties | Improve this Doc View Source X Declaration public double X { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Y Declaration public double Y { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Z Declaration public double Z { get; set; } Property Value Type Description System.Double Methods | Improve this Doc View Source Equals(Vector3d) Declaration protected bool Equals(Vector3d other) Parameters Type Name Description Vector3d other Returns Type Description System.Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() | Improve this Doc View Source One() Declaration public static Vector3d One() Returns Type Description Vector3d | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() | Improve this Doc View Source Zero() Declaration public static Vector3d Zero() Returns Type Description Vector3d"
  },
  "api/CueX.GridSPS.Config.GridConfigurationHelper.html": {
    "href": "api/CueX.GridSPS.Config.GridConfigurationHelper.html",
    "title": "Class GridConfigurationHelper | CueX Documentation",
    "keywords": "Class GridConfigurationHelper Inheritance System.Object GridConfigurationHelper Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CueX.GridSPS.Config Assembly : CueX.GridSPS.dll Syntax public static class GridConfigurationHelper Methods | Improve this Doc View Source AddClientApplicationParts(IApplicationPartManager) Declaration public static void AddClientApplicationParts(IApplicationPartManager parts) Parameters Type Name Description Orleans.ApplicationParts.IApplicationPartManager parts | Improve this Doc View Source AddServices(IServiceCollection) Declaration public static void AddServices(IServiceCollection svc) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection svc | Improve this Doc View Source AddSiloApplicationParts(IApplicationPartManager) Declaration public static void AddSiloApplicationParts(IApplicationPartManager parts) Parameters Type Name Description Orleans.ApplicationParts.IApplicationPartManager parts"
  },
  "api/CueX.GridSPS.Config.GridConfigurationGrain.html": {
    "href": "api/CueX.GridSPS.Config.GridConfigurationGrain.html",
    "title": "Class GridConfigurationGrain | CueX Documentation",
    "keywords": "Class GridConfigurationGrain Inheritance System.Object Orleans.Grain GridConfigurationGrain Implements Orleans.ILifecycleParticipant < Orleans.Runtime.IGrainLifecycle > IGridConfigurationGrain Orleans.IGrainWithStringKey Orleans.IGrain Orleans.Runtime.IAddressable Inherited Members Orleans.Grain.RegisterTimer(System.Func<System.Object, System.Threading.Tasks.Task>, System.Object, System.TimeSpan, System.TimeSpan) Orleans.Grain.RegisterOrUpdateReminder(System.String, System.TimeSpan, System.TimeSpan) Orleans.Grain.UnregisterReminder(Orleans.Runtime.IGrainReminder) Orleans.Grain.GetReminder(System.String) Orleans.Grain.GetReminders() Orleans.Grain.GetStreamProvider(System.String) Orleans.Grain.DeactivateOnIdle() Orleans.Grain.DelayDeactivation(System.TimeSpan) Orleans.Grain.OnActivateAsync() Orleans.Grain.OnDeactivateAsync() Orleans.Grain.Participate(Orleans.Runtime.IGrainLifecycle) Orleans.Grain.GrainReference Orleans.Grain.GrainFactory Orleans.Grain.ServiceProvider Orleans.Grain.IdentityString Orleans.Grain.RuntimeIdentity System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CueX.GridSPS.Config Assembly : CueX.GridSPS.dll Syntax public class GridConfigurationGrain : Grain, ILifecycleParticipant<IGrainLifecycle>, IGridConfigurationGrain, IGrainWithStringKey, IGrain, IAddressable Constructors | Improve this Doc View Source GridConfigurationGrain(IGridConfigurationService) Declaration public GridConfigurationGrain(IGridConfigurationService configService) Parameters Type Name Description IGridConfigurationService configService Fields | Improve this Doc View Source DefaultKey Declaration public static readonly string DefaultKey Field Value Type Description System.String Methods | Improve this Doc View Source GetConfiguration() Declaration public Task<GridConfiguration> GetConfiguration() Returns Type Description System.Threading.Tasks.Task < GridConfiguration > | Improve this Doc View Source SetConfiguration(GridConfiguration) Declaration public Task SetConfiguration(GridConfiguration config) Parameters Type Name Description GridConfiguration config Returns Type Description System.Threading.Tasks.Task Implements Orleans.ILifecycleParticipant<TLifecycleObservable> IGridConfigurationGrain Orleans.IGrainWithStringKey Orleans.IGrain Orleans.Runtime.IAddressable"
  },
  "api/CueX.Core.Subscription.html": {
    "href": "api/CueX.Core.Subscription.html",
    "title": "Namespace CueX.Core.Subscription | CueX Documentation",
    "keywords": "Namespace CueX.Core.Subscription Classes SubscriptionDetails TypeFilter<TSelf> Interfaces IArea IEvent ISubscriptionBuilder<T> ITypeFilter"
  },
  "api/CueX.Core.SpatialGrainState.html": {
    "href": "api/CueX.Core.SpatialGrainState.html",
    "title": "Class SpatialGrainState | CueX Documentation",
    "keywords": "Class SpatialGrainState Inheritance System.Object SpatialGrainState BasicSpatialGrainState SimpleGrainState Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CueX.Core Assembly : CueX.Core.dll Syntax public abstract class SpatialGrainState Fields | Improve this Doc View Source Parent Declaration public IPartitionGrain Parent Field Value Type Description IPartitionGrain | Improve this Doc View Source Position Declaration public Vector3d Position Field Value Type Description Vector3d"
  },
  "api/CueX.Core.Configuration.html": {
    "href": "api/CueX.Core.Configuration.html",
    "title": "Class Configuration | CueX Documentation",
    "keywords": "Class Configuration Inheritance System.Object Configuration GridConfiguration Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CueX.Core Assembly : CueX.Core.dll Syntax public abstract class Configuration"
  },
  "articles/engineering_guidelines.html": {
    "href": "articles/engineering_guidelines.html",
    "title": "Engineering Guidelines | CueX Documentation",
    "keywords": "Engineering Guidelines Basics Copyright header and license notice All source code files require the following exact header according to its language (please do not make any changes to it). extension: .cs // Copyright (c) Microsoft. All rights reserved. // Licensed under the MIT license. See LICENSE file in the project root for full license information. extension: .js // Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE file in the project root for full license information. extension: .css /* Copyright (c) Microsoft Corporation. All Rights Reserved. Licensed under the MIT License. See License.txt in the project root for license information. */ extension: .tmpl , .tmpl.partial {{!Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE file in the project root for full license information.}} External dependencies This refers to dependencies on projects (i.e. NuGet packages) outside of the docfx repo, and especially outside of Microsoft. Adding new dependencies require additional approval. Current approved dependencies are: Newtonsoft.Json Jint HtmlAgilityPack Nustache YamlDotNet Code reviews and checkins To help ensure that only the highest quality code makes its way into the project, please submit all your code changes to GitHub as PRs. This includes runtime code changes, unit test updates, and deployment scripts. For example, sending a PR for just an update to a unit test might seem like a waste of time but the unit tests are just as important as the product code and as such, reviewing changes to them is also just as important. The advantages are numerous: improving code quality, more visibility on changes and their potential impact, avoiding duplication of effort, and creating general awareness of progress being made in various areas. In general a PR should be signed off(using the 👍 emoticon) by the Owner of that code. To commit the PR to the repo do not use the Big Green Button . Instead, do a typical push that you would use with Git (e.g. local pull, rebase, merge, push). Source Code Management Branch strategy In general: master has the code for the latest release on NuGet.org. (e.g. 1.0.0 , 1.1.0 ) dev has the code that is being worked on but not yet released. This is the branch into which devs normally submit pull requests and merge changes into. We run daily CI towards dev branch and generate pre-release nuget package, e.g. 1.0.1-alpha-9-abcdefsd . hotfix has the code for fixing master bug after it is released. hotfix changes will be merged back to master and dev once it is verified. Solution and project folder structure and naming Solution files go in the repo root. The default entry point is All.sln . Every project also needs a project.json and a matching .xproj file. This project.json is the source of truth for a project's dependencies and configuration options. Solution need to contain solution folders that match the physical folder ( src , test , tools , etc.). Assembly naming pattern The general naming pattern is Microsoft.DocAsCode.<area>.<subarea> . Unit tests We use xUnit.net for all unit testing. Coding Standards Please refer to C# Coding standards for detailed guideline for C# coding standards. TODO Template Coding standards TODO Template Preprocess JS Coding standards"
  },
  "articles/docfx_getting_started.html": {
    "href": "articles/docfx_getting_started.html",
    "title": "Getting Started with docfx | CueX Documentation",
    "keywords": "Getting Started with docfx Getting Started This is a seed. docfx is an API documentation generator for .NET, currently support C# and VB. It has the ability to extract triple slash comments out from your source code. What's more, it has syntax to link additional files to API to add additional remarks. docfx will scan your source code and your additional conceptual files and generate a complete HTML documentation website for you. docfx provides the flexibility for you to customize the website through templates. We currently have several embedded templates, including websites containing pure static html pages and also website managed by AngularJS. Click \"View Source\" for an API to route to the source code in GitHub (your API must be pushed to GitHub) docfx provide DNX version for cross platform use. docfx can be used within Visual Studio seamlessly. NOTE offical docfx.msbuild nuget package is now in pre-release version. You can also build your own with source code and use it locally. We support Docfx Flavored Markdown(DFM) for writing conceptual files. DFM is 100% compatible with Github Flavored Markdown(GFM) and add several new features including file inclusion , cross reference , and yaml header ."
  },
  "articles/csharp_coding_standards.html": {
    "href": "articles/csharp_coding_standards.html",
    "title": "C# Coding Standards | CueX Documentation",
    "keywords": "C# Coding Standards Introduction The coding standard will be used in conjunction with customized version of StyleCop and FxCop [ TODO ] during both development and build process. This will help ensure that the standard is followed by all developers on the team in a consistent manner. \"Any fool can write code that a computer can understand. Good programmers write code that humans understand\". Martin Fowler. Refactoring: Improving the design of existing code. Purpose The aim of this section is to define a set of C# coding standards to be used by CAPS build team to guarantee maximum legibility, reliability, re-usability and homogeneity of our code. Each section is marked Mandatory or Recommended . Mandatory sections, will be enforced during code reviews as well as tools like StyleCop and FxCop , and code will not be considered complete until it is compliant. Scope This section contains general C# coding standards which can be applied to any type of application developed in C#, based on Framework Design Guidelines . It does not pretend to be a tutorial on C#. It only includes a set of limitations and recommendations focused on clarifying the development. Tools Resharper is a great 3rd party code cleanup and style tool. StyleCop analyzes C# srouce code to enforce a set of style and consistency rules and has been integrated into many 3rd party development tools such as Resharper. FxCop is an application that analyzes managed code assemblies (code that targets the .NET Framework common language runtime) and reports information about the assemblies, such as possible design, localization, performance, and security improvements. C# Stylizer does many of the style rules automatically Highlights of Coding Standards This section is not intended to give a summary of all the coding standards that enabled by our customized StyleCop, but to give a highlight of some rules one will possibly meet in daily coding life. It also provides some recommended however not mandatory(which means not enabled in StyleCop) coding standards. File Layout (Recommended) Only one public class is allowed per file. The file name is derived from the class name. Class : Observer Filename: Observer.cs Class Definition Order (Mandatory) The class definition contains class members in the following order, from less restricted scope (public) to more restrictive (private): Nested types, e.g. classes, enum, struct, etc. Field members, e.g. member variables, const, etc. Member functions Constructors Finalizer (Do not use unless absolutely necessary) Methods (Properties, Events, Operations, Overridables, Static) Private nested types Naming (Mandatory) DO use PascalCasing for all public member, type, and namespace names consisting of multiple words. PropertyDescriptor HtmlTag IOStream NOTE : A special case is made for two-letter acronyms in which both letters are capitalized, e.g. IOStream DO use camelCasing for parameter names. propertyDescriptor htmlTag ioStream DO start with underscore for private fields private readonly Guid _userId = Guid.NewGuid(); DO start static readonly fields, constants with capitalized case private static readonly IEntityAccessor EntityAccessor = null; private const string MetadataName = \"MetadataName\"; DO NOT capitalize each word in so-called closed-form compound words . DO have \"Async\" explicitly in the Async method name to notice people how to use it properly Formatting (Mandatory) DO use spaces over tabs, and always show all spaces/tabs in IDE Tips Visual Studio > TOOLS > Options > Text Editor > C# > Tabs > Insert spaces (Tab size: 4) Visual Studio > Edit > Advanced > View White Space DO add using inside namespace declaration namespace Microsoft.Content.Build.BuildWorker.UnitTest { using System; } DO add a space when: for (var i = 0; i < 1; i++) if (a == b) Cross-platform coding Our code should supports multiple operating systems. Don't assume we only run (and develop) on Windows. Code should be sensitvie to the differences between OS's. Here are some specifics to consider. DO use Enviroment.NewLine instead of hard-coding the line break instead of \\r\\n , as Windows uses \\r\\n and OSX/Linux uses \\n . Note Be aware that thes line-endings may cause problems in code when using @\"\" text blocks with line breaks. DO Use Path.Combine() or Path.DirectorySeparatorChar to separate directories. If this is not possible (such as in scripting), use a forward slash / . Windows is more forgiving than Linux in this regard. Unit tests and functional tests Assembly naming The unit tests for the Microsoft.Foo assembly live in the Microsoft.Foo.Tests assembly. The functional tests for the Microsoft.Foo assmebly live in the Microsoft.Foo.FunctionalTests assmebly. In general there should be exactly one unit test assebmly for each product runtime assembly. In general there should be one functional test assembly per repo. Exceptions can be made for both. Unit test class naming Test class names end with Test and live in the same namespace as the class being tested. For example, the unit tests for the Microsoft.Foo.Boo class would be in a Microsoft.Foo.Boo class in the test assembly. Unit test method naming Unit test method names must be descriptive about what is being tested, under what conditions, and what the expectations are . Pascal casing and underscores can be used to improve readability. The following test names are correct: PublicApiArgumentsShouldHaveNotNullAnnotation Public_api_arguments_should_have_not_null_annotation The following test names are incorrect: Test1 Constructor FormatString GetData Unit test structure The contents of every unit test should be split into three distinct stages, optionally separated by these comments: // Arrange // Act // Assert The crucial thing here is the Act stage is exactly one statement. That one statement is nothing more than a call to the one method that you are trying to test. keeping that one statement as simple as possible is also very important. For example, this is not ideal: int result = myObj.CallSomeMethod(GetComplexParam1(), GetComplexParam2(), GetComplexParam3()); This style is not recomended because way too many things can go wrong in this one statement. All the GetComplexParamN() calls can throw for a variety of reasons unrelated to the test itself. It is thus unclear to someone running into a problem why the failure occured. The ideal pattern is to move the complex parameter building into the `Arrange section: // Arrange P1 p1 = GetComplexParam1(); P2 p2 = GetComplexParam2(); P3 p3 = GetComplexParam3(); // Act int result = myObj.CallSomeMethod(p1, p2, p3); // Assert Assert.AreEqual(1234, result); Now the only reason the line with CallSomeMethod() can fail is if the method itself blew up. Testing exception messages In general testing the specific exception message in a unit test is important. This ensures that the exact desired exception is what is being tested rather than a different exception of the same type. In order to verify the exact exception it is important to verify the message. var ex = Assert.Throws<InvalidOperationException>( () => fruitBasket.GetBananaById(1234)); Assert.Equal( \"1234\", ex.Message); Use xUnit.net's plethora of built-in assertions xUnit.net includes many kinds of assertions – please use the most appropriate one for your test. This will make the tests a lot more readable and also allow the test runner report the best possible errors (whether it's local or the CI machine). For example, these are bad: Assert.Equal(true, someBool); Assert.True(\"abc123\" == someString); Assert.True(list1.Length == list2.Length); for (int i = 0; i < list1.Length; i++) { Assert.True( String.Equals list1[i], list2[i], StringComparison.OrdinalIgnoreCase)); } These are good: Assert.True(someBool); Assert.Equal(\"abc123\", someString); // built-in collection assertions! Assert.Equal(list1, list2, StringComparer.OrdinalIgnoreCase); Parallel tests By default all unit test assemblies should run in parallel mode, which is the default. Unit tests shouldn't depend on any shared state, and so should generally be runnable in parallel. If the tests fail in parallel, the first thing to do is to figure out why; do not just disable parallel tests! For functional tests it is reasonable to disable parallel tests."
  },
  "index.html": {
    "href": "index.html",
    "title": "docfx-seed | CueX Documentation",
    "keywords": "docfx-seed Description This is a sample docfx documentation project. It contains .NET source code and markdown files. docfx.json is the configuration file for running docfx . docfx will generate a static website as similar to http://docascode.github.io/docfx-seed . How to run Under Windows Download and unzip docfx.zip to run docfx.exe directly! Run docfx under current repo! Website will be generated under _site folder. Run any web hosting tool to host _site folder, e.g. docfx serve _site . Cross platform and use dnx As a prerequisite, you will need to install DNVM and DNX . Quick Start dnvm upgrade to get the latest dnvm. Add feed https://www.myget.org/F/aspnetrelease/api/v2/ to Nuget.config For Windows, the nuget config file is %AppData%\\NuGet\\NuGet.config . For Linux/OSX, the nuget config file is ~/.config/NuGet/NuGet.config . ``` dnu commands install docfx to install docfx as a command Run docfx under current repo! Website will be generated under _site folder. Run any web hosting tool to host _site folder, e.g. docfx serve _site . Further information about docfx docfx is a tool to generate documentation towards .NET source code and markdown files. Please refer to docfx to get start. The docfx website itself is generated by docfx !"
  },
  "api/SimpleExample.Grains.ISimpleGrain.html": {
    "href": "api/SimpleExample.Grains.ISimpleGrain.html",
    "title": "Interface ISimpleGrain | CueX Documentation",
    "keywords": "Interface ISimpleGrain Inherited Members ISpatialGrain.SetPosition(Vector3d) ISpatialGrain.GetPosition() ISpatialGrain.SetParent<T>(T) ISpatialGrain.RemoveSelfFromParent() Namespace : SimpleExample.Grains Assembly : SimpleExample.Grains.dll Syntax public interface ISimpleGrain : ISpatialGrain, IGrainWithIntegerKey, IGrain, IAddressable"
  },
  "api/CueX.Test.html": {
    "href": "api/CueX.Test.html",
    "title": "Namespace CueX.Test | CueX Documentation",
    "keywords": "Namespace CueX.Test Classes BasicSpatialGrainTest GridSPSTest"
  },
  "api/CueX.Test.Helper.html": {
    "href": "api/CueX.Test.Helper.html",
    "title": "Namespace CueX.Test.Helper | CueX Documentation",
    "keywords": "Namespace CueX.Test.Helper Classes ClusterCollection ClusterFixture PriorityOrderer TestPriorityAttribute"
  },
  "api/CueX.Test.Helper.ClusterFixture.html": {
    "href": "api/CueX.Test.Helper.ClusterFixture.html",
    "title": "Class ClusterFixture | CueX Documentation",
    "keywords": "Class ClusterFixture Inheritance System.Object ClusterFixture Implements System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CueX.Test.Helper Assembly : CueX.Test.dll Syntax public class ClusterFixture : IDisposable Constructors | Improve this Doc View Source ClusterFixture() Declaration public ClusterFixture() Properties | Improve this Doc View Source Client Declaration public IClusterClient Client { get; } Property Value Type Description Orleans.IClusterClient | Improve this Doc View Source Cluster Declaration public TestCluster Cluster { get; } Property Value Type Description Orleans.TestingHost.TestCluster Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() Implements System.IDisposable"
  },
  "api/CueX.Test.Helper.ClusterCollection.html": {
    "href": "api/CueX.Test.Helper.ClusterCollection.html",
    "title": "Class ClusterCollection | CueX Documentation",
    "keywords": "Class ClusterCollection Inheritance System.Object ClusterCollection Implements Xunit.ICollectionFixture < ClusterFixture > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CueX.Test.Helper Assembly : CueX.Test.dll Syntax [CollectionDefinition(\"ClusterCollection\")] public class ClusterCollection : ICollectionFixture<ClusterFixture> Fields | Improve this Doc View Source Name Declaration public const string Name = \"ClusterCollection\" Field Value Type Description System.String Implements Xunit.ICollectionFixture<TFixture>"
  },
  "api/CueX.Test.Grains.IBasicSpatialGrain.html": {
    "href": "api/CueX.Test.Grains.IBasicSpatialGrain.html",
    "title": "Interface IBasicSpatialGrain | CueX Documentation",
    "keywords": "Interface IBasicSpatialGrain Inherited Members ISpatialGrain.SetPosition(Vector3d) ISpatialGrain.GetPosition() ISpatialGrain.SetParent<T>(T) ISpatialGrain.RemoveSelfFromParent() Namespace : CueX.Test.Grains Assembly : CueX.Test.dll Syntax public interface IBasicSpatialGrain : ISpatialGrain, IGrainWithIntegerKey, IGrain, IAddressable Methods | Improve this Doc View Source HasParent() Declaration Task<bool> HasParent() Returns Type Description System.Threading.Tasks.Task < System.Boolean >"
  },
  "api/CueX.Test.Grains.BasicSpatialGrainState.html": {
    "href": "api/CueX.Test.Grains.BasicSpatialGrainState.html",
    "title": "Class BasicSpatialGrainState | CueX Documentation",
    "keywords": "Class BasicSpatialGrainState Inheritance System.Object SpatialGrainState BasicSpatialGrainState Inherited Members SpatialGrainState.Position SpatialGrainState.Parent System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CueX.Test.Grains Assembly : CueX.Test.dll Syntax public class BasicSpatialGrainState : SpatialGrainState"
  },
  "api/CueX.Test.Events.TestEvent.html": {
    "href": "api/CueX.Test.Events.TestEvent.html",
    "title": "Class TestEvent | CueX Documentation",
    "keywords": "Class TestEvent Inheritance System.Object TestEvent Implements IEvent Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CueX.Test.Events Assembly : CueX.Test.dll Syntax public class TestEvent : IEvent Implements IEvent"
  },
  "api/CueX.Core.SpatialPubSubBuilder.html": {
    "href": "api/CueX.Core.SpatialPubSubBuilder.html",
    "title": "Class SpatialPubSubBuilder | CueX Documentation",
    "keywords": "Class SpatialPubSubBuilder Inheritance System.Object SpatialPubSubBuilder GridSpatialPubSubBuilder Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CueX.Core Assembly : CueX.Core.dll Syntax public abstract class SpatialPubSubBuilder Methods | Improve this Doc View Source Build(IClusterClient) Declaration public abstract Task<ISpatialPubSub> Build(IClusterClient client) Parameters Type Name Description Orleans.IClusterClient client Returns Type Description System.Threading.Tasks.Task < ISpatialPubSub > | Improve this Doc View Source CheckHardwareSupport() Declaration protected bool CheckHardwareSupport() Returns Type Description System.Boolean"
  },
  "api/CueX.Core.SpatialGrain-2.html": {
    "href": "api/CueX.Core.SpatialGrain-2.html",
    "title": "Class SpatialGrain<TGrainInterface, TState> | CueX Documentation",
    "keywords": "Class SpatialGrain<TGrainInterface, TState> Abstract class providing the basic functionality necessary for sub-classes to be insertable into the PubSub-System. This is a class talking about CAT . NOTE This is a CAT class Refer to ISpatialGrain to see other animals. Inheritance System.Object Orleans.Grain Orleans.Grain <TState> SpatialGrain<TGrainInterface, TState> BasicSpatialGrain SimpleGrain Implements Orleans.ILifecycleParticipant < Orleans.Runtime.IGrainLifecycle > ISpatialGrain Orleans.IGrain Orleans.Runtime.IAddressable Inherited Members Orleans.Grain<TState>.ClearStateAsync() Orleans.Grain<TState>.WriteStateAsync() Orleans.Grain<TState>.ReadStateAsync() Orleans.Grain<TState>.Participate(Orleans.Runtime.IGrainLifecycle) Orleans.Grain<TState>.State Orleans.Grain.RegisterTimer(System.Func<System.Object, System.Threading.Tasks.Task>, System.Object, System.TimeSpan, System.TimeSpan) Orleans.Grain.RegisterOrUpdateReminder(System.String, System.TimeSpan, System.TimeSpan) Orleans.Grain.UnregisterReminder(Orleans.Runtime.IGrainReminder) Orleans.Grain.GetReminder(System.String) Orleans.Grain.GetReminders() Orleans.Grain.GetStreamProvider(System.String) Orleans.Grain.DeactivateOnIdle() Orleans.Grain.DelayDeactivation(System.TimeSpan) Orleans.Grain.OnActivateAsync() Orleans.Grain.OnDeactivateAsync() Orleans.Grain.GrainReference Orleans.Grain.GrainFactory Orleans.Grain.ServiceProvider Orleans.Grain.IdentityString Orleans.Grain.RuntimeIdentity System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CueX.Core Assembly : CueX.Core.dll Syntax public abstract class SpatialGrain<TGrainInterface, TState> : Grain<TState>, ILifecycleParticipant<IGrainLifecycle>, ISpatialGrain, IGrain, IAddressable where TGrainInterface : ISpatialGrain where TState : SpatialGrainState, new() Type Parameters Name Description TGrainInterface TState Application-specific state data type, that also holds SpatialGrainState . Remarks THIS is remarks overridden in MARKDWON file Methods | Improve this Doc View Source GetPosition() Declaration public Task<Vector3d> GetPosition() Returns Type Description System.Threading.Tasks.Task < Vector3d > | Improve this Doc View Source RemoveSelfFromParent() Declaration public Task<bool> RemoveSelfFromParent() Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source SetParent<T>(T) Declaration public Task SetParent<T>(T parent) where T : IPartitionGrain Parameters Type Name Description T parent Returns Type Description System.Threading.Tasks.Task Type Parameters Name Description T | Improve this Doc View Source SetPosition(Vector3d) Declaration public Task SetPosition(Vector3d newPosition) Parameters Type Name Description Vector3d newPosition Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source Subscribe(SubscriptionDetails, Action<IEvent>) Declaration public bool Subscribe(SubscriptionDetails subscription, Action<IEvent> callback) Parameters Type Name Description SubscriptionDetails subscription System.Action < IEvent > callback Returns Type Description System.Boolean | Improve this Doc View Source SubscribeTo<T>() Declaration public ISubscriptionBuilder<T> SubscribeTo<T>() where T : IEvent Returns Type Description ISubscriptionBuilder <T> Type Parameters Name Description T Implements Orleans.ILifecycleParticipant<TLifecycleObservable> ISpatialGrain Orleans.IGrain Orleans.Runtime.IAddressable"
  },
  "api/CueX.Core.PartitionGrain-2.html": {
    "href": "api/CueX.Core.PartitionGrain-2.html",
    "title": "Class PartitionGrain<TGrainInterface, TState> | CueX Documentation",
    "keywords": "Class PartitionGrain<TGrainInterface, TState> Abstract class providing the basic functionality necessary for sub-classes to manage a partition of the SPS area. Inheritance System.Object Orleans.Grain Orleans.Grain <TState> PartitionGrain<TGrainInterface, TState> GridPartitionGrain Implements Orleans.ILifecycleParticipant < Orleans.Runtime.IGrainLifecycle > IPartitionGrain Orleans.IGrain Orleans.Runtime.IAddressable Inherited Members Orleans.Grain<TState>.ClearStateAsync() Orleans.Grain<TState>.WriteStateAsync() Orleans.Grain<TState>.ReadStateAsync() Orleans.Grain<TState>.Participate(Orleans.Runtime.IGrainLifecycle) Orleans.Grain<TState>.State Orleans.Grain.RegisterTimer(System.Func<System.Object, System.Threading.Tasks.Task>, System.Object, System.TimeSpan, System.TimeSpan) Orleans.Grain.RegisterOrUpdateReminder(System.String, System.TimeSpan, System.TimeSpan) Orleans.Grain.UnregisterReminder(Orleans.Runtime.IGrainReminder) Orleans.Grain.GetReminder(System.String) Orleans.Grain.GetReminders() Orleans.Grain.GetStreamProvider(System.String) Orleans.Grain.DeactivateOnIdle() Orleans.Grain.DelayDeactivation(System.TimeSpan) Orleans.Grain.OnActivateAsync() Orleans.Grain.OnDeactivateAsync() Orleans.Grain.GrainReference Orleans.Grain.GrainFactory Orleans.Grain.ServiceProvider Orleans.Grain.IdentityString Orleans.Grain.RuntimeIdentity System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CueX.Core Assembly : CueX.Core.dll Syntax public abstract class PartitionGrain<TGrainInterface, TState> : Grain<TState>, ILifecycleParticipant<IGrainLifecycle>, IPartitionGrain, IGrain, IAddressable where TGrainInterface : IPartitionGrain where TState : PartitionGrainState, new() Type Parameters Name Description TGrainInterface TState Application-specific state data type, that also holds PartitionGrainState . Methods | Improve this Doc View Source Add<T>(T) Declaration public Task Add<T>(T spatialGrain) where T : ISpatialGrain Parameters Type Name Description T spatialGrain Returns Type Description System.Threading.Tasks.Task Type Parameters Name Description T | Improve this Doc View Source GetChildren() Declaration public Task<IEnumerable<ISpatialGrain>> GetChildren() Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.IEnumerable < ISpatialGrain >> | Improve this Doc View Source Remove<T>(T) Declaration public Task<bool> Remove<T>(T spatialGrain) where T : ISpatialGrain Parameters Type Name Description T spatialGrain Returns Type Description System.Threading.Tasks.Task < System.Boolean > Type Parameters Name Description T Implements Orleans.ILifecycleParticipant<TLifecycleObservable> IPartitionGrain Orleans.IGrain Orleans.Runtime.IAddressable"
  },
  "api/CueX.Core.ISpatialGrain.html": {
    "href": "api/CueX.Core.ISpatialGrain.html",
    "title": "Interface ISpatialGrain | CueX Documentation",
    "keywords": "Interface ISpatialGrain Interace that needs to be fulfilled by any spatial objects, that should be inserted into the PubSub-System. Namespace : CueX.Core Assembly : CueX.Core.dll Syntax public interface ISpatialGrain : IGrain, IAddressable Methods | Improve this Doc View Source GetPosition() Declaration Task<Vector3d> GetPosition() Returns Type Description System.Threading.Tasks.Task < Vector3d > | Improve this Doc View Source RemoveSelfFromParent() Declaration Task<bool> RemoveSelfFromParent() Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source SetParent<T>(T) Declaration Task SetParent<T>(T parent) where T : IPartitionGrain Parameters Type Name Description T parent Returns Type Description System.Threading.Tasks.Task Type Parameters Name Description T | Improve this Doc View Source SetPosition(Vector3d) Declaration Task SetPosition(Vector3d newPosition) Parameters Type Name Description Vector3d newPosition Returns Type Description System.Threading.Tasks.Task"
  },
  "api/CueX.Core.IPartitionGrain.html": {
    "href": "api/CueX.Core.IPartitionGrain.html",
    "title": "Interface IPartitionGrain | CueX Documentation",
    "keywords": "Interface IPartitionGrain Namespace : CueX.Core Assembly : CueX.Core.dll Syntax public interface IPartitionGrain : IGrain, IAddressable Methods | Improve this Doc View Source Add<T>(T) Declaration Task Add<T>(T spatialGrain) where T : ISpatialGrain Parameters Type Name Description T spatialGrain Returns Type Description System.Threading.Tasks.Task Type Parameters Name Description T | Improve this Doc View Source GetChildren() Declaration Task<IEnumerable<ISpatialGrain>> GetChildren() Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.IEnumerable < ISpatialGrain >> | Improve this Doc View Source Remove<T>(T) Declaration Task<bool> Remove<T>(T spatialGrain) where T : ISpatialGrain Parameters Type Name Description T spatialGrain Returns Type Description System.Threading.Tasks.Task < System.Boolean > Type Parameters Name Description T"
  },
  "api/LocalhostSilo.html": {
    "href": "api/LocalhostSilo.html",
    "title": "Namespace LocalhostSilo | CueX Documentation",
    "keywords": "Namespace LocalhostSilo Classes Program"
  },
  "api/LocalhostSilo.Program.html": {
    "href": "api/LocalhostSilo.Program.html",
    "title": "Class Program | CueX Documentation",
    "keywords": "Class Program Inheritance System.Object Program Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : LocalhostSilo Assembly : LocalhostSilo.dll Syntax public class Program Methods | Improve this Doc View Source Main(String[]) Declaration public static Task<int> Main(string[] args) Parameters Type Name Description System.String [] args Returns Type Description System.Threading.Tasks.Task < System.Int32 >"
  },
  "api/CueX.Test.GridSPSTest.html": {
    "href": "api/CueX.Test.GridSPSTest.html",
    "title": "Class GridSPSTest | CueX Documentation",
    "keywords": "Class GridSPSTest Inheritance System.Object GridSPSTest Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CueX.Test Assembly : CueX.Test.dll Syntax [Collection(\"ClusterCollection\")] [TestCaseOrderer(\"CueX.Test.Helper.PriorityOrderer\", \"GridSPSTestOrderer\")] public class GridSPSTest Constructors | Improve this Doc View Source GridSPSTest(ClusterFixture) Declaration public GridSPSTest(ClusterFixture fixture) Parameters Type Name Description ClusterFixture fixture Methods | Improve this Doc View Source TestGridConfigurationService() Declaration [Fact] [TestPriority(10)] public void TestGridConfigurationService() | Improve this Doc View Source TestGridInsert() Declaration [Fact] public void TestGridInsert() | Improve this Doc View Source TestGridRemove() Declaration [Fact] public void TestGridRemove()"
  },
  "api/CueX.Test.Grains.html": {
    "href": "api/CueX.Test.Grains.html",
    "title": "Namespace CueX.Test.Grains | CueX Documentation",
    "keywords": "Namespace CueX.Test.Grains Classes BasicSpatialGrain BasicSpatialGrainState Interfaces IBasicSpatialGrain"
  },
  "api/CueX.Test.Grains.BasicSpatialGrain.html": {
    "href": "api/CueX.Test.Grains.BasicSpatialGrain.html",
    "title": "Class BasicSpatialGrain | CueX Documentation",
    "keywords": "Class BasicSpatialGrain Inheritance System.Object Orleans.Grain Orleans.Grain < BasicSpatialGrainState > SpatialGrain < IBasicSpatialGrain , BasicSpatialGrainState > BasicSpatialGrain Implements Orleans.ILifecycleParticipant < Orleans.Runtime.IGrainLifecycle > IBasicSpatialGrain ISpatialGrain Orleans.IGrainWithIntegerKey Orleans.IGrain Orleans.Runtime.IAddressable Inherited Members SpatialGrain<IBasicSpatialGrain, BasicSpatialGrainState>.SetPosition(Vector3d) SpatialGrain<IBasicSpatialGrain, BasicSpatialGrainState>.GetPosition() SpatialGrain<IBasicSpatialGrain, BasicSpatialGrainState>.SetParent<T>(T) SpatialGrain<IBasicSpatialGrain, BasicSpatialGrainState>.RemoveSelfFromParent() SpatialGrain<IBasicSpatialGrain, BasicSpatialGrainState>.Subscribe(SubscriptionDetails, Action<IEvent>) SpatialGrain<IBasicSpatialGrain, BasicSpatialGrainState>.SubscribeTo<T>() Orleans.Grain<CueX.Test.Grains.BasicSpatialGrainState>.ClearStateAsync() Orleans.Grain<CueX.Test.Grains.BasicSpatialGrainState>.WriteStateAsync() Orleans.Grain<CueX.Test.Grains.BasicSpatialGrainState>.ReadStateAsync() Orleans.Grain<CueX.Test.Grains.BasicSpatialGrainState>.Participate(Orleans.Runtime.IGrainLifecycle) Orleans.Grain<CueX.Test.Grains.BasicSpatialGrainState>.State Orleans.Grain.RegisterTimer(System.Func<System.Object, System.Threading.Tasks.Task>, System.Object, System.TimeSpan, System.TimeSpan) Orleans.Grain.RegisterOrUpdateReminder(System.String, System.TimeSpan, System.TimeSpan) Orleans.Grain.UnregisterReminder(Orleans.Runtime.IGrainReminder) Orleans.Grain.GetReminder(System.String) Orleans.Grain.GetReminders() Orleans.Grain.GetStreamProvider(System.String) Orleans.Grain.DeactivateOnIdle() Orleans.Grain.DelayDeactivation(System.TimeSpan) Orleans.Grain.OnActivateAsync() Orleans.Grain.OnDeactivateAsync() Orleans.Grain.GrainReference Orleans.Grain.GrainFactory Orleans.Grain.ServiceProvider Orleans.Grain.IdentityString Orleans.Grain.RuntimeIdentity System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CueX.Test.Grains Assembly : CueX.Test.dll Syntax public class BasicSpatialGrain : SpatialGrain<IBasicSpatialGrain, BasicSpatialGrainState>, ILifecycleParticipant<IGrainLifecycle>, IBasicSpatialGrain, ISpatialGrain, IGrainWithIntegerKey, IGrain, IAddressable Methods | Improve this Doc View Source HasParent() Declaration public Task<bool> HasParent() Returns Type Description System.Threading.Tasks.Task < System.Boolean > Implements Orleans.ILifecycleParticipant<TLifecycleObservable> IBasicSpatialGrain ISpatialGrain Orleans.IGrainWithIntegerKey Orleans.IGrain Orleans.Runtime.IAddressable"
  },
  "api/CueX.Test.Events.html": {
    "href": "api/CueX.Test.Events.html",
    "title": "Namespace CueX.Test.Events | CueX Documentation",
    "keywords": "Namespace CueX.Test.Events Classes TestEvent"
  },
  "api/CueX.GridSPS.IGridPartitionGrain.html": {
    "href": "api/CueX.GridSPS.IGridPartitionGrain.html",
    "title": "Interface IGridPartitionGrain | CueX Documentation",
    "keywords": "Interface IGridPartitionGrain Inherited Members IPartitionGrain.Add<T>(T) IPartitionGrain.Remove<T>(T) IPartitionGrain.GetChildren() Namespace : CueX.GridSPS Assembly : CueX.GridSPS.dll Syntax public interface IGridPartitionGrain : IPartitionGrain, IGrainWithStringKey, IGrain, IAddressable"
  },
  "api/CueX.GridSPS.GridSpatialPubSubBuilder.html": {
    "href": "api/CueX.GridSPS.GridSpatialPubSubBuilder.html",
    "title": "Class GridSpatialPubSubBuilder | CueX Documentation",
    "keywords": "Class GridSpatialPubSubBuilder Builder class to help configure and bootstrap a ISpatialPubSub using the grid-based implementation. Inheritance System.Object SpatialPubSubBuilder GridSpatialPubSubBuilder Inherited Members SpatialPubSubBuilder.CheckHardwareSupport() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CueX.GridSPS Assembly : CueX.GridSPS.dll Syntax public class GridSpatialPubSubBuilder : SpatialPubSubBuilder Methods | Improve this Doc View Source Build(IClusterClient) Declaration public override Task<ISpatialPubSub> Build(IClusterClient client) Parameters Type Name Description Orleans.IClusterClient client Returns Type Description System.Threading.Tasks.Task < ISpatialPubSub > Overrides SpatialPubSubBuilder.Build(IClusterClient) | Improve this Doc View Source Configure(Action<GridConfiguration>) Declaration public GridSpatialPubSubBuilder Configure(Action<GridConfiguration> configure) Parameters Type Name Description System.Action < GridConfiguration > configure Returns Type Description GridSpatialPubSubBuilder | Improve this Doc View Source UsePartitionSize(Double) Declaration public GridSpatialPubSubBuilder UsePartitionSize(double size) Parameters Type Name Description System.Double size Returns Type Description GridSpatialPubSubBuilder"
  },
  "api/CueX.GridSPS.Config.html": {
    "href": "api/CueX.GridSPS.Config.html",
    "title": "Namespace CueX.GridSPS.Config | CueX Documentation",
    "keywords": "Namespace CueX.GridSPS.Config Classes GridConfiguration GridConfigurationGrain GridConfigurationHelper GridConfigurationService Interfaces IGridConfigurationGrain Just a proxy to access the IGridConfigurationService from the client IGridConfigurationService"
  },
  "api/CueX.GridSPS.Config.IGridConfigurationService.html": {
    "href": "api/CueX.GridSPS.Config.IGridConfigurationService.html",
    "title": "Interface IGridConfigurationService | CueX Documentation",
    "keywords": "Interface IGridConfigurationService Namespace : CueX.GridSPS.Config Assembly : CueX.GridSPS.dll Syntax public interface IGridConfigurationService Methods | Improve this Doc View Source GetConfiguration() Declaration Task<GridConfiguration> GetConfiguration() Returns Type Description System.Threading.Tasks.Task < GridConfiguration > | Improve this Doc View Source SetConfiguration(GridConfiguration) Declaration Task SetConfiguration(GridConfiguration config) Parameters Type Name Description GridConfiguration config Returns Type Description System.Threading.Tasks.Task"
  }
}